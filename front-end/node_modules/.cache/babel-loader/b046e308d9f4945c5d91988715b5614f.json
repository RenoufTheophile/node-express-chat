{"ast":null,"code":"var _jsxFileName = \"/home/renouf/Desktop/node-express-chat/front-end/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport socketIoClient from \"socket.io-client\";\nconst socket = socketIoClient(\"http://localhost:8463\", {\n  autoConnect: false\n});\n\nconst Message = _ref => {\n  let {\n    msg\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \" \", new Date(msg.date).toLocaleDateString(), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \" \", msg.content, \" \"));\n};\n\nconst MessageBox = () => {\n  const [value, setValue] = useState(\"\");\n\n  const postMessage = e => {\n    e.preventDefault();\n    if (!value) return;\n    socket.emit(\"message\", value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: postMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"message\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n\n  const addMessage = msg => {\n    setMessages(oldMessages => [...oldMessages, ...(Array.isArray(msg) ? msg.reverse() : [msg])]);\n  };\n\n  useEffect(() => {\n    socket.on(\"latest\", data => {\n      // expect server to send us the latest messages\n      addMessage(data);\n    });\n    socket.on(\"message\", msg => {\n      addMessage(msg);\n    });\n    socket.connect();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"msgBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(Message, {\n    msg: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 48\n    }\n  }))), /*#__PURE__*/React.createElement(MessageBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/renouf/Desktop/node-express-chat/front-end/src/App.js"],"names":["React","useState","useEffect","socketIoClient","socket","autoConnect","Message","msg","Date","date","toLocaleDateString","content","MessageBox","value","setValue","postMessage","e","preventDefault","emit","target","Chat","messages","setMessages","addMessage","oldMessages","Array","isArray","reverse","on","data","connect","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport socketIoClient from \"socket.io-client\";\n\n\n\nconst socket = socketIoClient(\"http://localhost:8463\", { autoConnect: false });\n\n\nconst Message = ({ msg }) => {\n\n    return (\n        <div className=\"msg\">\n            <span> { new Date(msg.date).toLocaleDateString() } </span>\n            <span> { msg.content } </span>\n        </div>\n    );\n\n};\n\n\nconst MessageBox = () => {\n\n    const [value, setValue] = useState(\"\");\n\n    const postMessage = e => {\n        e.preventDefault();\n\n        if (!value) return;\n\n        socket.emit(\"message\", value);\n\n        setValue(\"\");\n    };\n\n    return (\n        <form onSubmit={ postMessage }>\n            <input type=\"text\" className=\"input\" placeholder=\"message\"\n                   value={ value } onChange={ e => setValue(e.target.value) }\n            />\n        </form>\n    );\n\n};\n\n\nconst Chat = () => {\n\n    const [messages, setMessages] = useState([]);\n\n    const addMessage = (msg) => {\n        setMessages(oldMessages => [...oldMessages, ...(Array.isArray(msg) ? msg.reverse() : [msg])]);\n    };\n\n    useEffect(()=> {\n\n        socket.on(\"latest\", (data) => {\n            // expect server to send us the latest messages\n            addMessage(data);\n        });\n        socket.on(\"message\", (msg) => {\n            addMessage(msg);\n        });\n\n        socket.connect();\n\n    }, []);\n\n    return (\n        <div>\n            <div id = \"msgBox\">\n                { messages.map((msg, index) => <Message msg={msg} />) }\n            </div>\n            <MessageBox />\n        </div>\n    );\n\n};\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}